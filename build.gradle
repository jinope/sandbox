plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'
project.ext.lwjglVersion = "3.3.3"

switch ( org.gradle.internal.os.OperatingSystem.current() ) {
    case org.gradle.internal.os.OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
    case org.gradle.internal.os.OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case org.gradle.internal.os.OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.lwjgl:lwjgl-glfw"

    implementation "org.joml:joml:1.10.5"

    // proj4j (java projection library)
    implementation "org.locationtech.proj4j:proj4j:1.2.3"
    implementation "org.locationtech.proj4j:proj4j-epsg:1.2.3"

    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"

    //lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

test {
    useJUnitPlatform()
}